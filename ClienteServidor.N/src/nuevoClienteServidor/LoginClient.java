/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nuevoClienteServidor;

import Servidor.AesEcryption;
import Servidor.ClientAuthentication;
import Servidor.Communication;
import java.awt.Graphics;
import java.awt.Image;
import java.net.Socket;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * The LoginClient class represents the login interface for the system client.
 * Users can log in with their credentials or register as new users.
 * The interface features fields for username and password, as well as buttons for login and registration.
 * Methods are provided to style input fields and handle action events.
 */
public class LoginClient extends javax.swing.JFrame {

    public static Socket sharedSocket;
    public static boolean sharedAuth = false;
    public static String shareRol ;

    backgroundPanel fondo = new backgroundPanel();
    ClientAuthentication authentication = new ClientAuthentication();

    private static final String SERVER_ADDRESS = "192.168.0.2"; 
    private static final int SERVER_PORT = 8081;

    public LoginClient() {
        this.setContentPane(fondo);
        initComponents();
        addPlaceHolderStyle(txtUser);
        addPlaceHolderStyle(txtPassword);
    }

    
      /**
 * Applies a placeholder style to the specified text field.
 * Change the text field font to italic and set the text color to gray.
 *
 * @param textField The JTextField to which the placeholder style will be applied.
 */
    public void addPlaceHolderStyle(JTextField textField) {
        Font font = textField.getFont();
        font = font.deriveFont(Font.ITALIC);
        textField.setFont(font);
        textField.setForeground(Color.gray);

    }

      /**
 * Removes the placeholder style from the specified text field.
 * Change the text field font to italic and restore the text color to black.
 *
 * @param textField The JTextField from which the placeholder style will be removed.
 */
    public void removePlaceHolderStyle(JTextField textField) {
        Font font = textField.getFont();
        font = font.deriveFont(Font.ITALIC);
        textField.setFont(font);
        textField.setForeground(Color.black);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new backgroundPanel();
        txtUser = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btncheckIn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        txtUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtUser.setText("Usuario");
        txtUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserFocusLost(evt);
            }
        });
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLogin.setText("Iniciar Sesión");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtPassword.setText("Contraseña");
        txtPassword.setEchoChar('\u0000');
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btncheckIn.setBackground(new java.awt.Color(204, 204, 204));
        btncheckIn.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btncheckIn.setForeground(new java.awt.Color(0, 102, 255));
        btncheckIn.setText("Registrarse");
        btncheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckInActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("¿No estas registrado?");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btncheckIn))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUser)
                                .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(224, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addGap(38, 38, 38)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncheckIn))
                .addGap(90, 90, 90))
        );

        txtUser.getAccessibleContext().setAccessibleName("txtUsser");
        btnLogin.getAccessibleContext().setAccessibleName("btnLogin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("JPanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed
/*
     * Method to handle click event on login button.
     * Gets the username and password entered by the user.
     * Establishes a connection to the server and sends login details for authentication.
     * Manages the server response and displays a welcome message if authentication is successful.
     * Opens the client interface for the authenticated user and closes the login interface.
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String userName = txtUser.getText();
        String Password = new String(txtPassword.getPassword());
        CheckIn checkInFrame = new CheckIn();
         String rol = checkInFrame.getShareRol();

        try (Socket socket = new Socket(SERVER_ADDRESS, SERVER_PORT); 
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true); 
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream())); 
            OutputStream binaryOut = socket.getOutputStream(); 
            InputStream binaryIn = socket.getInputStream()) {
            System.out.println("Dirección del socket en Login: " + socket.getLocalAddress() + ":" + socket.getLocalPort());

            String encryptedPassword = AesEcryption.encrypt(Password);
           
            Communication communication = new Communication(socket, out, in, binaryOut, binaryIn);

            
            communication.sendMessage("LOGIN," + userName + "," + encryptedPassword + "," + rol );

                    
            String response = communication.receiveMessage();
            


           
            if (response != null && !response.isEmpty()) {
                  String[] parts = response.split(","); 
                if (parts[0].equals("LOGIN")) {
                    sharedAuth = true;  
                    System.out.println("Autenticación exitosa");
                    LoginClient.sharedSocket = socket;
                    JOptionPane.showMessageDialog(this, "Bienvenido! " + userName);
                    ViewClient newFrame = new ViewClient(userName, communication,parts[1]);
                    newFrame.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Usuario / contraseña incorrectos");
                }
            
        } else {
            JOptionPane.showMessageDialog(this, "Error: Respuesta del servidor vacía");
        }
    } catch (IOException e) {
        System.err.println("Error al conectar con el servidor: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Error al conectar con el servidor");
    } catch (Exception ex) {
        Logger.getLogger(LoginClient.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserFocusGained

        if (txtUser.getText().equals("Usuario")) {
            txtUser.setText(null);
            txtUser.requestFocus();
            removePlaceHolderStyle(txtUser);

        }

    }//GEN-LAST:event_txtUserFocusGained

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed

    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        if (new String(txtPassword.getText()).equals("Contraseña")) {
            txtPassword.setText(null);
            txtPassword.requestFocus();
            txtPassword.setEchoChar('*');
            removePlaceHolderStyle(txtPassword);
        }
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserFocusLost
        if (txtUser.getText().length() == 0) {
            addPlaceHolderStyle(txtUser);
            txtUser.setText("Usuario");

        }
    }//GEN-LAST:event_txtUserFocusLost

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        if (new String(txtPassword.getText()).length() == 0) {
            addPlaceHolderStyle(txtPassword);
            txtPassword.setText("Contraseña");
            txtPassword.setEchoChar('\u0000');
        }

    }//GEN-LAST:event_txtPasswordFocusLost

    private void btncheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckInActionPerformed
        CheckIn newFrame = new CheckIn();

        newFrame.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btncheckInActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btncheckIn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
/**
 * **
 * Custom class that extends JPanel and is used to display a background image on a panel.
 * Cita: Maxita. (2015, 15 de octubre). How to Implement 
 * Bubble Sort in Java [Video]. YouTube. https://youtu.be/CfKlAHInank?si=XD_Du-OgDjimZ9OD
 */
    class backgroundPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {

            imagen = new ImageIcon(getClass().getResource("/Imagenes/fondoAzul.png")).getImage();

            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);

            setOpaque(false);

            super.paint(g);
        }

    }
}
